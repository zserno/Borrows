<?php

/**
 * @file
 *   Main module file.
 */

define("BORROWS_RESOURCE_CT", "bookingsapi_resource");


/**
 * Implementation of hook_menu().
 */
function borrows_menu() {
  $items['borrows_ajax'] = array(
    'page callback' => 'borrows_ajax',
    'access arguments' => array('access content'), // @TODO Adjust.
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_calendar_block().
 */
function borrows_calendar_block(&$calendar, &$date, $op) {
  switch($op) {
    case 'load':
      $path = drupal_get_path('module', 'borrows');
      drupal_add_css($path . '/css/borrows.css');
      drupal_add_js($path . '/js/jquery.blockUI.js');
      drupal_add_js($path . '/js/borrows.js', 'module', 'footer');
      break;
    case 'alter':
      //dpm($date);
      //dpm($calendar);

      $is_weekday = !in_array($date->weekday, array('sa', 'su'));
      // Do not allow booking for today and tomorrow.
      // strtotime() needs a bit of help.
      $is_allowed = (strtotime($date->day . '-' . $date->month . '-' . $date->year) >= (strtotime('tomorrow') + (24 * 60 * 60)));

      if ($is_weekday && $is_allowed) {
        $date->content  = '<label class="option" for="' . $date->date . '">';
        $date->content .= '<input type="checkbox" name="borrowdate[' . $date->date . ']" value="' . $date->date . '" id="borrowdate-' . $date->date . '" class="form-checkbox" />';
        $date->content .= $date->day . '</label>';
      }
      break;
  }
}

function borrows_ajax($nid) {
  if ($node = node_load($nid)) {
    if ($node->type == BORROWS_RESOURCE_CT) {
      $booking_info = array(
        'allowed_days' => $node->field_allowed_days[0]['value'],
      );
      return drupal_json($booking_info);
      //return $node->title;
    }
  }
  return 'null';
}
